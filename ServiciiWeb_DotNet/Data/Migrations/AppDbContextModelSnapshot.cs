// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Core.Entities.Cours", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Core.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Core.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Core.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("GroupId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("StudiesYearId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudiesYearId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Core.Entities.StudiesYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("Core.Entities.Timetable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClassroomId");

                    b.Property<Guid?>("CoursId");

                    b.Property<Guid?>("GroupId");

                    b.Property<DateTime>("HourEnd");

                    b.Property<DateTime>("HourStart");

                    b.Property<Guid?>("ProfessorId");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CoursId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("Core.Entities.Student", b =>
                {
                    b.HasOne("Core.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("Core.Entities.StudiesYear", "StudiesYear")
                        .WithMany("Students")
                        .HasForeignKey("StudiesYearId");
                });

            modelBuilder.Entity("Core.Entities.Timetable", b =>
                {
                    b.HasOne("Core.Entities.Classroom", "Classroom")
                        .WithMany("Timetable")
                        .HasForeignKey("ClassroomId");

                    b.HasOne("Core.Entities.Cours", "Cours")
                        .WithMany()
                        .HasForeignKey("CoursId");

                    b.HasOne("Core.Entities.Group", "Group")
                        .WithMany("Timetable")
                        .HasForeignKey("GroupId");

                    b.HasOne("Core.Entities.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");
                });
#pragma warning restore 612, 618
        }
    }
}
